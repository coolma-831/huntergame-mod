name: Build and Publish Minecraft Mod

on:
  workflow_dispatch:  # 允许手动触发
  push:
    branches: [ main ]
  pull_request: {}    # 在 PR 时也运行

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and Upload Mod
    
    steps:
    # 1. 检出代码
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取所有历史记录
    
    # 2. 设置 Java 环境
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'gradle'
    
    # 3. 设置 Forge 开发环境
    - name: Setup Forge environment
      run: |
        # 下载最新版 Forge MDK
        FORGE_VERSION="1.20.1-47.1.0"
        wget "https://maven.minecraftforge.net/net/minecraftforge/forge/$FORGE_VERSION/forge-$FORGE_VERSION-mdk.zip"
        unzip "forge-$FORGE_VERSION-mdk.zip" -d forge-mdk
        
        # 复制源文件
        mkdir -p forge-mdk/src/main/java/com/example/huntergame
        cp -r src/main/java/com/example/huntergame/* forge-mdk/src/main/java/com/example/huntergame/
        
        # 复制资源文件
        if [ -d "src/main/resources" ]; then
          cp -r src/main/resources forge-mdk/src/main/
        fi
        
        # 移动到工作目录
        mv forge-mdk/* .
        rm -rf forge-mdk
        
        # 添加执行权限
        chmod +x gradlew
        
        echo "Forge $FORGE_VERSION 环境设置完成"
    
    # 4. 构建 Mod
    - name: Build Mod with Gradle
      run: ./gradlew build --no-daemon --stacktrace
    
    # 5. 上传构建产物
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: mod-artifact
        path: build/libs/*.jar
        retention-days: 5
    
    # 6. 发布到 GitHub Release (可选)
    - name: Create Release
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: build/libs/*.jar
        generate_release_notes: true
        draft: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # 7. 缓存清理
    - name: Clean up Gradle cache
      if: always()
      run: |
        rm -rf ~/.gradle/caches
        
    # 8. 构建结果通知
    - name: Notify build status
      if: always()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_COLOR: ${{ job.status }} # 根据状态设置颜色
        SLACK_TITLE: 'Minecraft Mod Build'
        SLACK_MESSAGE: 'Build ${{ job.status }} for ${{ github.repository }}'
        SLACK_USERNAME: 'GitHub Actions'
